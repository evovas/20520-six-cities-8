{"version":3,"sources":["components/loader/loader.module.scss","components/login-form/login-form.module.scss","components/place-card/place-card.module.scss","components/map/map.module.scss","pages/room/room.module.scss","components/logo/logo.tsx","const.ts","types/action.ts","store/action.ts","store/root-reducer.ts","services/adapter.ts","services/token.ts","store/api-actions.ts","store/favorites/favorites.ts","store/offers/offers.ts","store/reviews/reviews.ts","store/ui/ui.ts","store/user/user.ts","store/user/selectors.ts","components/auth-user-menu/auth-user-menu.tsx","components/no-auth-user-menu/no-auth-user-menu.tsx","components/header/header.tsx","store/ui/selectors.ts","components/location-tab/location-tab.tsx","components/location-tabs/location-tabs.tsx","components/sorting-item/sorting-item.tsx","components/sorting/sorting.tsx","components/premium-label/premium-label.tsx","utils.ts","components/bookmark-button/bookmark-button.tsx","components/place-card/place-card.tsx","components/card-list/card-list.tsx","hooks/use-map.ts","components/map/map.tsx","components/offers-board/offers-board.tsx","components/offers-board-empty/offers-board-empty.tsx","offers-sorting.ts","store/offers/selectors.ts","pages/main/main.tsx","components/loader/loader.tsx","components/login-form/login-form.tsx","components/random-location/random-location.tsx","pages/login/login.tsx","pages/not-found/not-found.tsx","components/user-pro-label/user-pro-label.tsx","components/host-user/host-user.tsx","components/review-star/review-star.tsx","store/reviews/selectors.ts","components/review-form/review-form.tsx","components/review-item/review-item.tsx","components/review-list/review-list.tsx","components/property-reviews/property-reviews.tsx","pages/load-error/load-error.tsx","pages/room/room.tsx","components/favorites-locations-by-city/favorites-locations-by-city.tsx","components/favorites-empty/favorites-empty.tsx","store/favorites/selectors.ts","components/favorites-list/favorites-list.tsx","pages/favorites/favorites.tsx","components/private-route/private-route.tsx","components/app/app.tsx","services/api.ts","index.tsx"],"names":["module","exports","Logo","AppRoute","AuthorizationStatus","SortingOption","FetchStatus","APIRoute","ActionType","className","to","src","alt","width","height","CITIES_LIST","NameSpace","selectCity","createAction","SelectCity","currentCityName","payload","selectSortingOption","SelectSortingOption","currentSorting","setFavoriteOptionRequest","SetFavoriteOptionRequest","setFavoriteOptionSuccess","SetFavoriteOptionSuccess","setFavoriteOptionFailed","SetFavoriteOptionFailed","loadFavoriteOffersRequest","LoadFavoriteOffersRequest","loadFavoriteOffersSuccess","LoadFavoriteOffersSuccess","offers","loadFavoriteOffersFailed","LoadFavoriteOffersFailed","dropFavoriteOffers","DropFavoriteOffers","deleteFavoriteOffer","DeleteFavoriteOffer","offer","loadOffersRequest","LoadOffersRequest","loadOffersSuccess","LoadOffersSuccess","loadOffersFailed","LoadOffersFailed","loadOfferRequest","LoadOfferRequest","loadOfferSuccess","LoadOfferSuccess","loadOfferFailed","LoadOfferFailed","loadNearbyOffersRequest","LoadNearbyOffersRequest","loadNearbyOffersSuccess","LoadNearbyOffersSuccess","loadNearbyOffersFailed","LoadNearbyOffersFailed","dropRoomOffersData","DropRoomOffersData","replaceOffer","ReplaceOffer","loadReviewsRequest","LoadReviewsRequest","loadReviewsSuccess","LoadReviewsSuccess","reviews","loadReviewsFailed","LoadReviewsFailed","dropRoomReviewsData","DropRoomReviewsData","postReviewRequest","PostReviewRequest","postReviewSuccess","PostReviewSuccess","postReviewFailed","PostReviewFailed","resetPostReview","ResetPostReview","saveCurrentUser","SaveCurrentUser","user","dropCurrentUser","DropCurrentUser","checkAuthRequest","CheckAuthRequest","checkAuthSuccess","CheckAuthSuccess","authorizationStatus","checkAuthFailed","CheckAuthFailed","requireAuthorizationRequest","RequireAuthorizationRequest","requireAuthorizationSuccess","RequireAuthorizationSuccess","requireAuthorizationFailed","RequireAuthorizationFailed","requireLogoutRequest","RequireLogoutRequest","requireLogoutSuccess","RequireLogoutSuccess","requireLogoutFailed","RequireLogoutFailed","adaptOfferToClient","newOffer","isFavorite","isPremium","maxAdults","previewImage","host","avatarUrl","isPro","adaptReviewToClient","review","newReview","adaptCurrentUserToClient","newUser","AUTH_TOKEN_KEY_NAME","saveToken","token","localStorage","setItem","dropToken","removeItem","FAIL_MESSAGE","fetchOffersAction","dispatch","_","api","a","get","Offers","data","map","initialState","favoriteOptionStatus","Idle","favoriteOffersStatus","favoriteOffers","favorites","createReducer","builder","addCase","state","Loading","Success","Failed","action","filter","id","offersStatus","offerStatus","nearbyOffers","nearbyOffersStatus","indexOffers","findIndex","indexNearbyOffers","reviewsStatus","reviewPostStatus","Popular","ui","currentUser","checkAuthStatus","Unknown","authorizationRequestStatus","logoutStatus","NoAuth","Auth","rootReducer","combineReducers","Favorites","Reviews","Ui","User","getCurrentUser","getAuthorizationStatus","getAuthorizationRequestStatus","AuthUserMenu","useDispatch","useSelector","email","Root","onClick","delete","Logout","toast","info","NoAuthUserMenu","Login","Header","getCurrentCityName","getCurrentSorting","LocationTab","cityName","cn","LocationTabs","SortingItem","sortingOption","onChangeOpenSelectState","tabIndex","memo","Sorting","useState","isOpen","setOpen","method","xlinkHref","Object","values","option","PremiumLabel","calculateRatingStars","rating","Math","round","ButtonProperty","property","BookmarkButton","buttonType","history","useHistory","status","post","Favorite","postFavoriteOptionAction","push","type","ArticleClassName","Map","PlaceCard","cardType","onMouseEnterCard","onMouseLeaveCard","onMouseEnter","onMouseLeave","title","price","style","styles","placeCardType","CardList","useMap","mapRef","city","setMap","useEffect","location","latitude","longitude","zoom","current","instance","leaflet","center","lat","lng","tileLayer","attribution","addTo","activeCardId","useRef","defaultIcon","icon","iconUrl","iconSize","iconAnchor","activeIcon","setView","points","forEach","point","marker","remove","ref","OffersBoard","currentCityOffers","currentCity","setActiveCardId","useCallback","length","name","OffersBoardEmpty","comparePriceLowFirst","offerA","offerB","comparePriceHighFirst","compareTopRatedFirst","getOffersStatus","getOffer","getOfferStatus","getNearbyOffers","selectOffers","createSelector","sorting","PriceLowFirst","sort","PriceHighFirst","TopRatedFirst","sortOffers","Main","Loader","size","isFullScreen","isLoginScreen","isReviewForm","isFavoritesScreen","loaderWrapperFullScreen","loaderWrapperFavoritesScreen","loaderWrapperLogin","loaderWrapperReview","color","fields","password","LoginForm","value","error","touched","errorText","regex","formState","setFormState","handleFormChange","target","isValid","test","onSubmit","evt","preventDefault","loginAction","entries","label","inputCls","loginInputError","loginInputWrapper","htmlFor","placeholder","onChange","loginInputErrorMessage","disabled","RandomLocation","randomCity","b","lower","ceil","min","abs","upper","floor","max","result","random","getRandomPositiveInteger","NotFound","UserProLabel","HostUser","ReviewStar","currentValue","onReviewChange","checked","getReviewPostStatus","selectReviews","slice","reviewA","reviewB","Date","date","getTime","STARS_IDENTIFIERS","ReviewForm","pageId","setReview","handleReviewChange","isValidReview","isLoading","comment","Comments","postReviewAction","split","ReviewItem","dateTime","dayjs","format","ReviewList","PropertyReviews","LoadError","href","FullTypeName","apartment","room","house","hotel","Room","useParams","fetchOfferAction","Nearby","fetchNearbyOffersAction","fetchReviewsAction","bedrooms","description","goods","images","image","propertyFeatureEntire","item","parseInt","FavoritesLocationsByCity","cityOffers","FavoritesEmpty","getFavoriteOffersStatus","getFavoriteOffers","FavoritesList","reduce","acc","favoritesOffers","PrivateRoute","exact","path","render","verifiableStatus","redirectTo","App","HttpCode","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59cfdcef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapperFullScreen\":\"loader_loaderWrapperFullScreen__Q0-Pb\",\"loaderWrapperFavoritesScreen\":\"loader_loaderWrapperFavoritesScreen__1Bnz3\",\"loaderWrapperLogin\":\"loader_loaderWrapperLogin__3pC0Z\",\"loaderWrapperReview\":\"loader_loaderWrapperReview__1A4YT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginInputWrapper\":\"login-form_loginInputWrapper__3z3w4\",\"loginInputErrorMessage\":\"login-form_loginInputErrorMessage__1_WMs\",\"loginInputError\":\"login-form_loginInputError__3umeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeCardType\":\"place-card_placeCardType__1-WR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cities__map\":\"map_cities__map__1AMsR\",\"property__map\":\"map_property__map__3awWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"propertyFeatureEntire\":\"room_propertyFeatureEntire__1Pmee\"};","import {Link} from 'react-router-dom';\n\nfunction Logo(): JSX.Element {\n  return (\n    <Link className='header__logo-link header__logo-link--active' to='/' data-testid='logo'>\n      <img className='header__logo' src='/20520-six-cities-8/img/logo.svg' alt='6 cities logo' width='81' height='41'/>\n    </Link>\n  );\n}\n\nexport default Logo;\n","export const CITIES_LIST = ['Paris', 'Cologne', 'Brussels', 'Amsterdam', 'Hamburg', 'Dusseldorf'];\nexport const MAXIMUM_COMMENTS_COUNT = 10;\n\nexport enum AppRoute {\n  Favorites = '/favorites',\n  Login = '/login',\n  Room = '/offer/:id',\n  Root = '/'\n}\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum SortingOption {\n  Popular = 'Popular',\n  PriceLowFirst = 'Price: low to high',\n  PriceHighFirst = 'Price: high to low',\n  TopRatedFirst = 'Top rated first',\n}\n\nexport enum FetchStatus {\n  Idle = 'IDLE',\n  Loading = 'LOADING',\n  Success = 'SUCCESS',\n  Failed = 'FAILED',\n}\n\nexport enum APIRoute {\n  Offers = '/hotels',\n  Login = '/login',\n  Logout = '/logout',\n  Nearby = '/nearby',\n  Comments = '/comments',\n  Favorite = '/favorite',\n}\n","import {AxiosInstance} from 'axios';\nimport {Action, ThunkAction, ThunkDispatch} from '@reduxjs/toolkit';\nimport {State} from './state';\n\nexport enum ActionType {\n  SelectCity = 'ui/selectCity',\n  SelectSortingOption = 'ui/selectSortingOption',\n  SetFavoriteOptionRequest = 'favorites/setFavoriteOptionRequest',\n  SetFavoriteOptionSuccess= 'favorites/setFavoriteOptionSuccess',\n  SetFavoriteOptionFailed = 'favorites/setFavoriteOptionFailed',\n  LoadFavoriteOffersRequest = 'favorites/loadFavoriteOffersRequest',\n  LoadFavoriteOffersSuccess = 'favorites/loadFavoriteOffersSuccess',\n  LoadFavoriteOffersFailed = 'favorites/loadFavoriteOffersFailed',\n  DropFavoriteOffers = 'favorites/dropFavoriteOffers',\n  DeleteFavoriteOffer = 'favorites/deleteFavoriteOffer',\n  LoadOffersRequest = 'offers/loadOffersRequest',\n  LoadOffersSuccess = 'offers/loadOffersSuccess',\n  LoadOffersFailed = 'offers/loadOffersFailed',\n  LoadOfferRequest = 'offers/loadOfferRequest',\n  LoadOfferSuccess = 'offers/loadOfferSuccess',\n  LoadOfferFailed = 'offers/loadOfferFailed',\n  LoadNearbyOffersRequest = 'offers/loadNearbyOffersRequest',\n  LoadNearbyOffersSuccess = 'offers/loadNearbyOffersSuccess',\n  LoadNearbyOffersFailed = 'offers/loadNearbyOffersFailed',\n  DropRoomOffersData = 'offers/dropRoomOffersData',\n  ReplaceOffer = 'offers/replaceOffer',\n  LoadReviewsRequest = 'reviews/loadReviewsRequest',\n  LoadReviewsSuccess = 'reviews/loadReviewsSuccess',\n  LoadReviewsFailed = 'reviews/loadReviewsFailed',\n  DropRoomReviewsData = 'reviews/dropRoomReviewsData',\n  PostReviewRequest = 'reviews/postReviewRequest',\n  PostReviewSuccess = 'reviews/postReviewSuccess',\n  PostReviewFailed = 'reviews/postReviewFailed',\n  ResetPostReview = 'reviews/resetPostReview',\n  SaveCurrentUser = 'user/saveCurrentUser',\n  DropCurrentUser = 'user/dropCurrentUser',\n  CheckAuthRequest = 'user/checkAuthRequest',\n  CheckAuthSuccess = 'user/checkAuthSuccess',\n  CheckAuthFailed = 'user/checkAuthFailed',\n  RequireAuthorizationRequest = 'user/requireAuthorizationRequest',\n  RequireAuthorizationSuccess = 'user/requireAuthorizationSuccess',\n  RequireAuthorizationFailed = 'user/requireAuthorizationFailed',\n  RequireLogoutRequest = 'user/requireLogoutRequest',\n  RequireLogoutSuccess = 'user/requireLogoutSuccess',\n  RequireLogoutFailed = 'user/requireLogoutFailed',\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\nexport type ThunkAppDispatch = ThunkDispatch<State, AxiosInstance, Action>;\n","import {createAction} from '@reduxjs/toolkit';\nimport {ActionType} from '../types/action';\nimport {AuthorizationStatus, SortingOption} from '../const';\nimport {CurrentUser, Offer, Review} from '../types/data';\n\nexport const selectCity = createAction(\n  ActionType.SelectCity,\n  (currentCityName: string) => ({\n    payload: currentCityName,\n  }),\n);\n\nexport const selectSortingOption = createAction(\n  ActionType.SelectSortingOption,\n  (currentSorting: SortingOption) => ({\n    payload: currentSorting,\n  }),\n);\n\nexport const setFavoriteOptionRequest = createAction(ActionType.SetFavoriteOptionRequest);\nexport const setFavoriteOptionSuccess = createAction(ActionType.SetFavoriteOptionSuccess);\nexport const setFavoriteOptionFailed = createAction(ActionType.SetFavoriteOptionFailed);\n\nexport const loadFavoriteOffersRequest = createAction(ActionType.LoadFavoriteOffersRequest);\nexport const loadFavoriteOffersSuccess = createAction(\n  ActionType.LoadFavoriteOffersSuccess,\n  (offers: Offer[] | []) => ({\n    payload: offers,\n  }),\n);\nexport const loadFavoriteOffersFailed = createAction(ActionType.LoadFavoriteOffersFailed);\nexport const dropFavoriteOffers = createAction(ActionType.DropFavoriteOffers);\n\nexport const deleteFavoriteOffer = createAction(\n  ActionType.DeleteFavoriteOffer,\n  (offer: Offer) => ({\n    payload: offer,\n  }),\n);\n\nexport const loadOffersRequest = createAction(ActionType.LoadOffersRequest);\nexport const loadOffersSuccess = createAction(\n  ActionType.LoadOffersSuccess,\n  (offers: Offer[] | []) => ({\n    payload: offers,\n  }),\n);\nexport const loadOffersFailed = createAction(ActionType.LoadOffersFailed);\n\nexport const loadOfferRequest = createAction(ActionType.LoadOfferRequest);\nexport const loadOfferSuccess = createAction(\n  ActionType.LoadOfferSuccess,\n  (offer: Offer | null) => ({\n    payload: offer,\n  }),\n);\nexport const loadOfferFailed = createAction(ActionType.LoadOfferFailed);\n\nexport const loadNearbyOffersRequest = createAction(ActionType.LoadNearbyOffersRequest);\nexport const loadNearbyOffersSuccess = createAction(\n  ActionType.LoadNearbyOffersSuccess,\n  (offers: Offer[] | []) => ({\n    payload: offers,\n  }),\n);\nexport const loadNearbyOffersFailed = createAction(ActionType.LoadNearbyOffersFailed);\n\nexport const dropRoomOffersData = createAction(ActionType.DropRoomOffersData);\n\nexport const replaceOffer = createAction(\n  ActionType.ReplaceOffer,\n  (offer: Offer) => ({\n    payload: offer,\n  }),\n);\n\nexport const loadReviewsRequest = createAction(ActionType.LoadReviewsRequest);\nexport const loadReviewsSuccess = createAction(\n  ActionType.LoadReviewsSuccess,\n  (reviews: Review[] | []) => ({\n    payload: reviews,\n  }),\n);\nexport const loadReviewsFailed = createAction(ActionType.LoadReviewsFailed);\n\nexport const dropRoomReviewsData = createAction(ActionType.DropRoomReviewsData);\n\nexport const postReviewRequest = createAction(ActionType.PostReviewRequest);\nexport const postReviewSuccess = createAction(\n  ActionType.PostReviewSuccess,\n  (reviews: Review[]) => ({\n    payload: reviews,\n  }),\n);\nexport const postReviewFailed = createAction(ActionType.PostReviewFailed);\n\nexport const resetPostReview = createAction(ActionType.ResetPostReview);\n\nexport const saveCurrentUser = createAction(\n  ActionType.SaveCurrentUser,\n  (user: CurrentUser) => ({\n    payload: user,\n  }),\n);\n\nexport const dropCurrentUser = createAction(ActionType.DropCurrentUser);\n\nexport const checkAuthRequest = createAction(ActionType.CheckAuthRequest);\nexport const checkAuthSuccess = createAction(\n  ActionType.CheckAuthSuccess,\n  (authorizationStatus: AuthorizationStatus) => ({\n    payload: authorizationStatus,\n  }),\n);\nexport const checkAuthFailed = createAction(ActionType.CheckAuthFailed);\n\nexport const requireAuthorizationRequest = createAction(ActionType.RequireAuthorizationRequest);\nexport const requireAuthorizationSuccess = createAction(ActionType.RequireAuthorizationSuccess);\nexport const requireAuthorizationFailed = createAction(ActionType.RequireAuthorizationFailed);\n\nexport const requireLogoutRequest = createAction(ActionType.RequireLogoutRequest);\nexport const requireLogoutSuccess = createAction(ActionType.RequireLogoutSuccess);\nexport const requireLogoutFailed = createAction(ActionType.RequireLogoutFailed);\n","import {combineReducers} from '@reduxjs/toolkit';\nimport {favorites} from './favorites/favorites';\nimport {offers} from './offers/offers';\nimport {reviews} from './reviews/reviews';\nimport {ui} from './ui/ui';\nimport {user} from './user/user';\n\nexport enum NameSpace {\n  Favorites = 'FAVORITES',\n  Offers = 'OFFERS',\n  Reviews = 'REVIEWS',\n  Ui = 'UI',\n  User = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.Favorites]: favorites,\n  [NameSpace.Offers]: offers,\n  [NameSpace.Reviews]: reviews,\n  [NameSpace.Ui]: ui,\n  [NameSpace.User]: user,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {CurrentUser, ServerCurrentUser, Offer, Review, ServerOffer, ServerReview} from '../types/data';\n\nexport const adaptOfferToClient = (offer: ServerOffer): Offer => {\n  const newOffer = {\n    ...offer,\n    isFavorite: offer['is_favorite'],\n    isPremium: offer['is_premium'],\n    maxAdults: offer['max_adults'],\n    previewImage: offer['preview_image'],\n    host: {\n      ...offer.host,\n      avatarUrl: offer.host['avatar_url'],\n      isPro: offer.host['is_pro'],\n    },\n  };\n\n  delete newOffer['is_favorite'];\n  delete newOffer['is_premium'];\n  delete newOffer['max_adults'];\n  delete newOffer['preview_image'];\n  delete newOffer.host['avatar_url'];\n  delete newOffer.host['is_pro'];\n\n  return newOffer as Offer;\n};\n\nexport const adaptReviewToClient = (review: ServerReview): Review => {\n  const newReview = {\n    ...review,\n    user: {\n      ...review.user,\n      avatarUrl: review.user['avatar_url'],\n      isPro: review.user['is_pro'],\n    },\n  };\n\n  delete newReview.user['avatar_url'];\n  delete newReview.user['is_pro'];\n\n  return newReview as Review;\n};\n\nexport const adaptCurrentUserToClient = (user: ServerCurrentUser): CurrentUser => {\n  const newUser = {\n    ...user,\n    avatarUrl: user['avatar_url'],\n    isPro: user['is_pro'],\n  };\n\n  delete newUser['avatar_url'];\n  delete newUser['is_pro'];\n\n  return newUser as CurrentUser;\n};\n","const AUTH_TOKEN_KEY_NAME = 'six-cities-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import {toast} from 'react-toastify';\nimport {ThunkActionResult} from '../types/action';\nimport {ServerCurrentUser, ReviewPost, ServerOffer, ServerReview} from '../types/data';\nimport {APIRoute, AuthorizationStatus} from '../const';\nimport {\n  checkAuthFailed,\n  checkAuthRequest,\n  checkAuthSuccess,\n  loadReviewsFailed,\n  loadReviewsRequest,\n  loadReviewsSuccess,\n  postReviewRequest,\n  postReviewSuccess,\n  postReviewFailed,\n  loadNearbyOffersFailed,\n  loadNearbyOffersRequest,\n  loadNearbyOffersSuccess,\n  loadOfferFailed,\n  loadOfferRequest,\n  loadOffersFailed,\n  loadOffersRequest,\n  loadOffersSuccess,\n  loadOfferSuccess,\n  requireAuthorizationFailed,\n  requireAuthorizationRequest,\n  requireAuthorizationSuccess,\n  requireLogoutFailed,\n  requireLogoutRequest,\n  requireLogoutSuccess,\n  saveCurrentUser,\n  dropCurrentUser,\n  setFavoriteOptionRequest,\n  setFavoriteOptionSuccess,\n  setFavoriteOptionFailed,\n  replaceOffer,\n  loadFavoriteOffersRequest,\n  loadFavoriteOffersSuccess,\n  loadFavoriteOffersFailed, deleteFavoriteOffer\n} from './action';\nimport {adaptCurrentUserToClient, adaptOfferToClient, adaptReviewToClient} from '../services/adapter';\nimport {AuthData} from '../types/auth-data';\nimport {dropToken, saveToken} from '../services/token';\n\nconst BAD_REQUEST_CODE = 400;\nconst NOT_FOUND_CODE = 404;\nconst FAIL_MESSAGE = 'An error occurred, please try later';\nconst REVIEWS_FAIL_MESSAGE = 'An error occurred while loading comments, please try again later.';\nconst NEARBY_PLACES_FAIL_MESSAGE = 'There was an error loading places nearby, please try again later.';\n\nexport const postFavoriteOptionAction = (id: number, status: number): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(setFavoriteOptionRequest());\n    try {\n      const {data} = await api.post<ServerOffer>(`${APIRoute.Favorite}/${id}/${status}`);\n      const offer = adaptOfferToClient(data);\n      dispatch(setFavoriteOptionSuccess());\n      dispatch(replaceOffer(offer));\n      dispatch(deleteFavoriteOffer(offer));\n    } catch (e) {\n      dispatch(setFavoriteOptionFailed());\n      toast.info(FAIL_MESSAGE);\n    }\n  }\n);\n\nexport const fetchFavoriteOffersAction = (): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(loadFavoriteOffersRequest());\n    try {\n      const {data} = await api.get<ServerOffer[]>(APIRoute.Favorite);\n      dispatch(loadFavoriteOffersSuccess(data.map((offer) => adaptOfferToClient(offer))));\n    } catch (e) {\n      dispatch(loadFavoriteOffersFailed());\n    }\n  }\n);\n\nexport const fetchOffersAction = (): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(loadOffersRequest());\n    try {\n      const {data} = await api.get<ServerOffer[]>(APIRoute.Offers);\n      dispatch(loadOffersSuccess(data.map((offer) => adaptOfferToClient(offer))));\n    } catch (e) {\n      dispatch(loadOffersFailed());\n    }\n  }\n);\n\nexport const fetchOfferAction = (pageId: string): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(loadOfferRequest());\n    try {\n      const {data} = await api.get<ServerOffer>(`${APIRoute.Offers}/${pageId}`);\n      dispatch(loadOfferSuccess(adaptOfferToClient(data)));\n    } catch (e) {\n      (e === NOT_FOUND_CODE)\n        ? dispatch(loadOfferSuccess(null))\n        : dispatch(loadOfferFailed());\n    }\n  }\n);\n\nexport const fetchNearbyOffersAction = (pageId: string): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(loadNearbyOffersRequest());\n    try {\n      const {data} = await api.get<ServerOffer[]>(`${APIRoute.Offers}/${pageId}${APIRoute.Nearby}`);\n      dispatch(loadNearbyOffersSuccess(data.map((offer) => adaptOfferToClient(offer))));\n    } catch (e) {\n      dispatch(loadNearbyOffersFailed());\n      if (e !== NOT_FOUND_CODE) {\n        toast.info(NEARBY_PLACES_FAIL_MESSAGE);\n      }\n    }\n  }\n);\n\nexport const fetchReviewsAction = (pageId: string): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(loadReviewsRequest());\n    try {\n      const {data} = await api.get<ServerReview[]>(`${APIRoute.Comments}/${pageId}`);\n      dispatch(loadReviewsSuccess(data.map((review) => adaptReviewToClient(review))));\n    } catch (e) {\n      dispatch(loadReviewsFailed());\n      if (e !== BAD_REQUEST_CODE) {\n        toast.info(REVIEWS_FAIL_MESSAGE);\n      }\n    }\n  }\n);\n\nexport const postReviewAction = (pageId: string, {comment, rating}: ReviewPost): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(postReviewRequest());\n    try {\n      const {data} = await api.post<ServerReview[]>(`${APIRoute.Comments}/${pageId}`, {comment, rating});\n      dispatch(postReviewSuccess(data.map((review) => adaptReviewToClient(review))));\n    } catch (e) {\n      dispatch(postReviewFailed());\n      toast.info(FAIL_MESSAGE);\n    }\n  }\n);\n\nexport const checkAuthAction = (): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(checkAuthRequest());\n    try {\n      const {data} = await api.get(APIRoute.Login);\n      dispatch(checkAuthSuccess(AuthorizationStatus.Auth));\n      dispatch(saveCurrentUser(adaptCurrentUserToClient(data)));\n    } catch (e) {\n      dispatch(checkAuthFailed());\n      dispatch(dropCurrentUser());\n      dropToken();\n    }\n  }\n);\n\nexport const loginAction = ({email, password}: AuthData): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(requireAuthorizationRequest());\n    try {\n      const {data} = await api.post<ServerCurrentUser>(APIRoute.Login, {email, password});\n      const {token} = data;\n      saveToken(token);\n      dispatch(requireAuthorizationSuccess());\n      dispatch(saveCurrentUser(adaptCurrentUserToClient(data)));\n    } catch (e) {\n      dispatch(requireAuthorizationFailed());\n      toast.info(FAIL_MESSAGE);\n    }\n  }\n);\n\nexport const logoutAction = (): ThunkActionResult => (\n  async (dispatch, _, api): Promise<void> => {\n    dispatch(requireLogoutRequest());\n    try {\n      await api.delete(APIRoute.Logout);\n      dropToken();\n      await dispatch(fetchOffersAction());\n      dispatch(requireLogoutSuccess());\n      dispatch(dropCurrentUser());\n    } catch (e) {\n      dispatch(requireLogoutFailed());\n      toast.info(FAIL_MESSAGE);\n    }\n  }\n);\n","import {createReducer} from '@reduxjs/toolkit';\nimport {Favorites} from '../../types/state';\nimport {FetchStatus} from '../../const';\nimport {\n  deleteFavoriteOffer,\n  dropFavoriteOffers,\n  loadFavoriteOffersFailed,\n  loadFavoriteOffersRequest,\n  loadFavoriteOffersSuccess,\n  setFavoriteOptionFailed,\n  setFavoriteOptionRequest,\n  setFavoriteOptionSuccess\n} from '../action';\n\nconst initialState: Favorites = {\n  favoriteOptionStatus: FetchStatus.Idle,\n  favoriteOffersStatus: FetchStatus.Idle,\n  favoriteOffers: [],\n};\n\nconst favorites = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setFavoriteOptionRequest, (state) => {\n      state.favoriteOptionStatus = FetchStatus.Loading;\n    })\n    .addCase(setFavoriteOptionSuccess, (state) => {\n      state.favoriteOptionStatus = FetchStatus.Success;\n    })\n    .addCase(setFavoriteOptionFailed, (state) => {\n      state.favoriteOptionStatus = FetchStatus.Failed;\n    })\n    .addCase(loadFavoriteOffersRequest, (state) => {\n      state.favoriteOffersStatus = FetchStatus.Loading;\n    })\n    .addCase(loadFavoriteOffersSuccess, (state, action) => {\n      state.favoriteOffersStatus = FetchStatus.Success;\n      state.favoriteOffers = action.payload;\n    })\n    .addCase(loadFavoriteOffersFailed, (state) => {\n      state.favoriteOffersStatus = FetchStatus.Failed;\n    })\n    .addCase(dropFavoriteOffers, (state) => {\n      state.favoriteOffersStatus = FetchStatus.Idle;\n      state.favoriteOffers = [];\n    })\n    .addCase(deleteFavoriteOffer, (state, action) => {\n      state.favoriteOffers = state.favoriteOffers.filter((offer) => offer.id !== action.payload.id);\n    });\n});\n\nexport {favorites};\n","import {createReducer} from '@reduxjs/toolkit';\nimport {Offers} from '../../types/state';\nimport {FetchStatus} from '../../const';\nimport {\n  dropRoomOffersData,\n  loadNearbyOffersFailed,\n  loadNearbyOffersRequest,\n  loadNearbyOffersSuccess,\n  loadOfferFailed,\n  loadOfferRequest,\n  loadOffersFailed,\n  loadOffersRequest,\n  loadOffersSuccess,\n  loadOfferSuccess,\n  replaceOffer\n} from '../action';\n\nconst initialState: Offers = {\n  offers: [],\n  offersStatus: FetchStatus.Idle,\n  offer: null,\n  offerStatus: FetchStatus.Idle,\n  nearbyOffers: [],\n  nearbyOffersStatus: FetchStatus.Idle,\n};\n\nconst offers = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadOffersRequest, (state) => {\n      state.offersStatus = FetchStatus.Loading;\n    })\n    .addCase(loadOffersSuccess, (state, action) => {\n      state.offersStatus = FetchStatus.Success;\n      state.offers = action.payload;\n    })\n    .addCase(loadOffersFailed, (state) => {\n      state.offersStatus = FetchStatus.Failed;\n    })\n    .addCase(loadOfferRequest, (state) => {\n      state.offerStatus = FetchStatus.Loading;\n    })\n    .addCase(loadOfferSuccess, (state, action) => {\n      state.offerStatus = FetchStatus.Success;\n      state.offer = action.payload;\n    })\n    .addCase(loadOfferFailed, (state) => {\n      state.offerStatus = FetchStatus.Failed;\n    })\n    .addCase(loadNearbyOffersRequest, (state) => {\n      state.nearbyOffersStatus = FetchStatus.Loading;\n    })\n    .addCase(loadNearbyOffersSuccess, (state, action) => {\n      state.nearbyOffersStatus = FetchStatus.Success;\n      state.nearbyOffers = action.payload;\n    })\n    .addCase(loadNearbyOffersFailed, (state) => {\n      state.nearbyOffersStatus = FetchStatus.Failed;\n    })\n    .addCase(dropRoomOffersData, (state) => {\n      state.offer = null;\n      state.offerStatus = FetchStatus.Idle;\n      state.nearbyOffers = [];\n      state.nearbyOffersStatus = FetchStatus.Idle;\n    })\n    .addCase(replaceOffer, (state, action) => {\n      const indexOffers = state.offers.findIndex((offer) => offer.id === action.payload.id);\n      if (indexOffers !== -1) {\n        state.offers[indexOffers].isFavorite = action.payload.isFavorite;\n      }\n      const indexNearbyOffers = state.nearbyOffers.findIndex((offer) => offer.id === action.payload.id);\n      if (indexNearbyOffers !== -1) {\n        state.nearbyOffers[indexNearbyOffers].isFavorite = action.payload.isFavorite;\n      }\n      if (state.offer && indexNearbyOffers === -1) {\n        state.offer = action.payload;\n      }\n    });\n\n});\n\nexport {offers};\n","import {Reviews} from '../../types/state';\nimport {FetchStatus} from '../../const';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n  dropRoomReviewsData,\n  loadReviewsFailed,\n  loadReviewsRequest,\n  loadReviewsSuccess,\n  postReviewFailed,\n  postReviewRequest,\n  postReviewSuccess,\n  resetPostReview\n} from '../action';\n\nconst initialState: Reviews = {\n  reviews: [],\n  reviewsStatus: FetchStatus.Idle,\n  reviewPostStatus: FetchStatus.Idle,\n};\n\nconst reviews = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadReviewsRequest, (state) => {\n      state.reviewsStatus = FetchStatus.Loading;\n    })\n    .addCase(loadReviewsSuccess, (state, action) => {\n      state.reviewsStatus = FetchStatus.Success;\n      state.reviews = action.payload;\n    })\n    .addCase(loadReviewsFailed, (state) => {\n      state.reviewsStatus = FetchStatus.Failed;\n    })\n    .addCase(dropRoomReviewsData, (state) => {\n      state.reviews = [];\n      state.reviewsStatus = FetchStatus.Idle;\n    })\n    .addCase(postReviewRequest, (state) => {\n      state.reviewPostStatus = FetchStatus.Loading;\n    })\n    .addCase(postReviewSuccess, (state, action) => {\n      state.reviewPostStatus = FetchStatus.Success;\n      state.reviews = action.payload;\n    })\n    .addCase(postReviewFailed, (state) => {\n      state.reviewPostStatus = FetchStatus.Failed;\n    })\n    .addCase(resetPostReview, (state) => {\n      state.reviewPostStatus = FetchStatus.Idle;\n    });\n});\n\nexport {reviews};\n","import {createReducer} from '@reduxjs/toolkit';\nimport {UI} from '../../types/state';\nimport {SortingOption} from '../../const';\nimport {\n  selectCity,\n  selectSortingOption\n} from '../action';\n\nconst DEFAULT_CITY = 'Paris';\n\nconst initialState: UI = {\n  currentCityName: DEFAULT_CITY,\n  currentSorting: SortingOption.Popular,\n};\n\nconst ui = createReducer(initialState, (builder) => {\n  builder\n    .addCase(selectCity, (state, action) => {\n      state.currentCityName = action.payload;\n    })\n    .addCase(selectSortingOption, (state, action) => {\n      state.currentSorting = action.payload;\n    });\n});\n\nexport {ui};\n","import {createReducer} from '@reduxjs/toolkit';\nimport {User} from '../../types/state';\nimport {AuthorizationStatus, FetchStatus} from '../../const';\nimport {\n  checkAuthFailed,\n  checkAuthRequest,\n  checkAuthSuccess,\n  dropCurrentUser,\n  requireAuthorizationFailed,\n  requireAuthorizationRequest,\n  requireAuthorizationSuccess,\n  requireLogoutFailed,\n  requireLogoutRequest,\n  requireLogoutSuccess,\n  saveCurrentUser\n} from '../action';\n\nconst initialState: User = {\n  currentUser: null,\n  checkAuthStatus: FetchStatus.Idle,\n  authorizationStatus: AuthorizationStatus.Unknown,\n  authorizationRequestStatus: FetchStatus.Idle,\n  logoutStatus: FetchStatus.Idle,\n};\n\nconst user = createReducer(initialState, (builder) => {\n  builder\n    .addCase(saveCurrentUser, (state, action) => {\n      state.currentUser = action.payload;\n    })\n    .addCase(dropCurrentUser, (state) => {\n      state.currentUser = null;\n    })\n    .addCase(checkAuthRequest, (state) => {\n      state.checkAuthStatus = FetchStatus.Loading;\n    })\n    .addCase(checkAuthSuccess, (state, action) => {\n      state.checkAuthStatus = FetchStatus.Success;\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(checkAuthFailed, (state) => {\n      state.checkAuthStatus = FetchStatus.Failed;\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    })\n    .addCase(requireAuthorizationRequest, (state) => {\n      state.authorizationRequestStatus = FetchStatus.Loading;\n    })\n    .addCase(requireAuthorizationSuccess, (state) => {\n      state.authorizationRequestStatus = FetchStatus.Success;\n      state.authorizationStatus = AuthorizationStatus.Auth;\n    })\n    .addCase(requireAuthorizationFailed, (state) => {\n      state.authorizationRequestStatus = FetchStatus.Failed;\n    })\n    .addCase(requireLogoutRequest, (state) => {\n      state.logoutStatus = FetchStatus.Loading;\n    })\n    .addCase(requireLogoutSuccess, (state) => {\n      state.logoutStatus = FetchStatus.Success;\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    })\n    .addCase(requireLogoutFailed, (state) => {\n      state.logoutStatus = FetchStatus.Failed;\n    });\n});\n\nexport {user};\n","import {State} from '../../types/state';\nimport {CurrentUser} from '../../types/data';\nimport {NameSpace} from '../root-reducer';\nimport {AuthorizationStatus, FetchStatus} from '../../const';\n\nexport const getCurrentUser = (state: State): CurrentUser | null => state[NameSpace.User].currentUser;\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.User].authorizationStatus;\nexport const getAuthorizationRequestStatus = (state: State): FetchStatus => state[NameSpace.User].authorizationRequestStatus;\n","import {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {logoutAction} from '../../store/api-actions';\nimport {getCurrentUser} from '../../store/user/selectors';\nimport {AppRoute} from '../../const';\n\nfunction AuthUserMenu(): JSX.Element {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(getCurrentUser);\n\n  const handleClick = () => {\n    dispatch(logoutAction());\n  };\n\n  return (\n    <ul className='header__nav-list' data-testid='auth-user-menu'>\n      <li className='header__nav-item user'>\n        <Link className='header__nav-link header__nav-link--profile' to={AppRoute.Favorites}>\n          <div className='header__avatar-wrapper user__avatar-wrapper'/>\n          <span className='header__user-name user__name'>{currentUser && currentUser.email}</span>\n        </Link>\n      </li>\n      <li className='header__nav-item'>\n        <Link className='header__nav-link' to={AppRoute.Root} onClick={handleClick}>\n          <span className='header__signout'>\n            Sign out\n          </span>\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default AuthUserMenu;\n","import {Link} from 'react-router-dom';\nimport {AppRoute} from '../../const';\n\nfunction NoAuthUserMenu(): JSX.Element {\n  return (\n    <ul className=\"header__nav-list\" data-testid='no-auth-user-menu'>\n      <li className=\"header__nav-item user\">\n        <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.Login}>\n          <div className=\"header__avatar-wrapper user__avatar-wrapper\"/>\n          <span className=\"header__login\">Sign in</span>\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default NoAuthUserMenu;\n","import {useSelector} from 'react-redux';\nimport Logo from '../logo/logo';\nimport AuthUserMenu from '../auth-user-menu/auth-user-menu';\nimport NoAuthUserMenu from '../no-auth-user-menu/no-auth-user-menu';\nimport {AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction Header(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <header className='header' data-testid='header'>\n      <div className='container'>\n        <div className='header__wrapper'>\n          <div className='header__left'>\n            <Logo />\n          </div>\n          <nav className='header__nav'>\n            {\n              authorizationStatus === AuthorizationStatus.Auth\n                ? <AuthUserMenu />\n                : <NoAuthUserMenu />\n            }\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import {State} from '../../types/state';\nimport {NameSpace} from '../root-reducer';\nimport {SortingOption} from '../../const';\n\nexport const getCurrentCityName = (state: State): string => state[NameSpace.Ui].currentCityName;\nexport const getCurrentSorting = (state: State): SortingOption => state[NameSpace.Ui].currentSorting;\n","import {useDispatch, useSelector} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport cn from 'classnames';\nimport {selectCity} from '../../store/action';\nimport {getCurrentCityName} from '../../store/ui/selectors';\n\ntype LocationTabProps = {\n  cityName: string;\n}\n\nfunction LocationTab({cityName}: LocationTabProps): JSX.Element {\n  const dispatch = useDispatch();\n  const currentCityName = useSelector(getCurrentCityName);\n\n  const onLocationTabClick = () => {\n    dispatch(selectCity(cityName));\n  };\n\n  return (\n    <li className='locations__item' data-testid='location-tab'>\n      <Link className={cn('locations__item-link', 'tabs__item', {'tabs__item--active':cityName === currentCityName})} onClick={onLocationTabClick} to='/'>\n        <span>{cityName}</span>\n      </Link>\n    </li>\n  );\n}\n\nexport default LocationTab;\n","import LocationTab from '../location-tab/location-tab';\nimport {CITIES_LIST} from '../../const';\n\nfunction LocationTabs(): JSX.Element {\n  return (\n    <div className='tabs' data-testid='location-tabs'>\n      <section className='locations container'>\n        <ul className='locations__list tabs__list'>\n          {CITIES_LIST.map((cityName) => <LocationTab key={cityName} cityName={cityName} />)}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default LocationTabs;\n","import {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\nimport {SortingOption} from '../../const';\nimport {selectSortingOption} from '../../store/action';\nimport {memo} from 'react';\nimport {getCurrentSorting} from '../../store/ui/selectors';\n\ntype SortingItemProps = {\n  sortingOption: SortingOption;\n  onChangeOpenSelectState: () => void;\n}\n\nfunction SortingItem ({sortingOption, onChangeOpenSelectState}: SortingItemProps): JSX.Element {\n  const dispatch = useDispatch();\n  const currentSorting = useSelector(getCurrentSorting);\n\n  const onClick = () => {\n    dispatch(selectSortingOption(sortingOption));\n    onChangeOpenSelectState();\n  };\n\n  return (\n    <li\n      className={cn('places__option', {'places__option--active': sortingOption === currentSorting} )}\n      tabIndex={0}\n      onClick={onClick}\n      data-testid='sorting-item'\n    >\n      {sortingOption}\n    </li>\n  );\n}\n\nexport default memo(SortingItem);\n","import {memo, useState} from 'react';\nimport cn from 'classnames';\nimport {SortingOption} from '../../const';\nimport SortingItem from '../sorting-item/sorting-item';\nimport {useSelector} from 'react-redux';\nimport {getCurrentSorting} from '../../store/ui/selectors';\n\nfunction Sorting(): JSX.Element {\n  const currentSorting = useSelector(getCurrentSorting);\n\n  const [isOpen, setOpen] = useState(false);\n\n  const onChangeOpenSelectState = () => {\n    setOpen(!isOpen);\n  };\n\n  return (\n    <form className='places__sorting' action='#' method='get' data-testid='sorting'>\n      <span className='places__sorting-caption'>Sort by </span>\n      <span onClick={onChangeOpenSelectState} className='places__sorting-type' tabIndex={0}>\n        {currentSorting}\n        <svg className='places__sorting-arrow' width='7' height='4'>\n          <use xlinkHref='#icon-arrow-select'/>\n        </svg>\n      </span>\n      <ul className={cn('places__options', 'places__options--custom', {'places__options--opened':isOpen})}>\n        {[...Object.values(SortingOption)]\n          .map((option) => (\n            <SortingItem\n              key={option}\n              sortingOption={option}\n              onChangeOpenSelectState={onChangeOpenSelectState}\n            />))}\n      </ul>\n    </form>\n  );\n}\n\nexport default memo(Sorting);\n","type PremiumLabelProps = {\n  className: string;\n}\n\nfunction PremiumLabel({className}: PremiumLabelProps): JSX.Element {\n  return (\n    <div className={className} data-testid='premium-label'>\n      <span>Premium</span>\n    </div>\n  );\n}\n\nexport default PremiumLabel;\n","import {Offer} from './types/data';\n\nexport const calculateRatingStars = (rating: number): string => {\n  const STARS_COUNT = 5;\n  return `${Math.round(rating) * 100 / STARS_COUNT}%`;\n};\n\nexport const spliceOffersByCity = (offers: Offer[]): {[key: string]: Offer[]} => (\n  offers.reduce<{[city: string]: Offer[]}>((acc, offer)=> {\n    const city = offer.city.name;\n    if (!acc[city]) {\n      acc[city] = [];\n    }\n    acc[city].push(offer);\n    return acc;\n  }, {})\n);\n\nexport const getRandomPositiveInteger = (a: number, b:number): number => {\n  const lower = Math.ceil(Math.min(Math.abs(a), Math.abs(b)));\n  const upper = Math.floor(Math.max(Math.abs(a), Math.abs(b)));\n  const result = Math.random() * (upper - lower + 1) + lower;\n\n  return Math.floor(result);\n};\n","import cn from 'classnames';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\nimport {useHistory} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {postFavoriteOptionAction} from '../../store/api-actions';\n\nconst FAVORITE_STATUS_FALSE = 0;\nconst FAVORITE_STATUS_TRUE = 1;\n\ntype BookmarkButtonProps = {\n  buttonType: string;\n  isFavorite: boolean;\n  id: number;\n}\n\ntype ButtonProperties = {\n  [buttonType: string]: {\n    width: string;\n    height: string;\n  }\n}\n\nconst ButtonProperty: ButtonProperties = {\n  'place-card': {\n    width: '18',\n    height: '19',\n  },\n  property: {\n    width: '31',\n    height: '33',\n  },\n};\n\nfunction BookmarkButton ({buttonType, isFavorite, id}: BookmarkButtonProps): JSX.Element {\n  const dispatch = useDispatch();\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    if (authorizationStatus === AuthorizationStatus.Auth) {\n      dispatch(postFavoriteOptionAction(id, isFavorite ? FAVORITE_STATUS_FALSE : FAVORITE_STATUS_TRUE));\n    } else {\n      history.push(AppRoute.Login);\n    }\n  };\n\n  return (\n    <button\n      className={cn(`${buttonType}__bookmark-button`, 'button', {'place-card__bookmark-button--active': isFavorite})}\n      onClick={handleClick}\n      type='button'\n      data-testid='bookmark-button'\n    >\n      <svg className='place-card__bookmark-icon' width={ButtonProperty[buttonType].width} height={ButtonProperty[buttonType].height}>\n        <use xlinkHref='#icon-bookmark'/>\n      </svg>\n      <span className='visually-hidden'>{isFavorite ? 'In bookmarks' : 'To bookmarks'}</span>\n    </button>\n  );\n}\n\nexport default BookmarkButton;\n","import {memo} from 'react';\nimport {Link} from 'react-router-dom';\nimport cn from 'classnames';\nimport PremiumLabel from '../premium-label/premium-label';\nimport {Offer} from '../../types/data';\nimport {calculateRatingStars} from '../../utils';\nimport styles from './place-card.module.scss';\nimport BookmarkButton from '../bookmark-button/bookmark-button';\n\ntype CardProps = {\n  offer: Offer;\n  cardType: string;\n  onMouseEnterCard?: (id: number) => void;\n  onMouseLeaveCard?: () => void;\n}\n\nconst ArticleClassName = new Map([\n  ['cities', 'cities__place-card'],\n  ['favorites', 'favorites__card'],\n  ['near-places', 'near-places__card'],\n]);\n\nfunction PlaceCard({offer, cardType, onMouseEnterCard, onMouseLeaveCard}: CardProps): JSX.Element {\n  const mouseEnterHandler = () => {\n    if (onMouseEnterCard) {\n      onMouseEnterCard(offer.id);\n    }\n  };\n\n  const mouseLeaveHandler = () => {\n    if (onMouseLeaveCard) {\n      onMouseLeaveCard();\n    }\n  };\n\n  return (\n    <article\n      className={`${ArticleClassName.get(cardType)} place-card`}\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n      data-testid=\"place-card\"\n    >\n      {offer.isPremium && <PremiumLabel className={'place-card__mark'} />}\n      <div className={`${cardType}__image-wrapper place-card__image-wrapper`}>\n        <Link to={`/offer/${offer.id}`} data-testid='place-card-image-link'>\n          <img className='place-card__image' src={offer.previewImage}\n            width={cardType === 'favorites' ? '150' : '260'}\n            height={cardType === 'favorites' ? '110' : '200'} alt={offer.title}\n          />\n        </Link>\n      </div>\n      <div className={`${cardType}__card-info place-card__info`}>\n        <div className='place-card__price-wrapper'>\n          <div className='place-card__price'>\n            <b className='place-card__price-value'>&euro;{offer.price}</b>\n            <span className='place-card__price-text'>&#47;&nbsp;night</span>\n          </div>\n          <BookmarkButton buttonType={'place-card'} isFavorite={offer.isFavorite} id={offer.id} key={offer.id} />\n        </div>\n        <div className='place-card__rating rating'>\n          <div className='place-card__stars rating__stars'>\n            <span style={{width: calculateRatingStars(offer.rating)}}/>\n            <span className='visually-hidden'>Rating</span>\n          </div>\n        </div>\n        <h2 className='place-card__name'>\n          <Link to={`/offer/${offer.id}`} data-testid='place-card-title-link'>{offer.title}</Link>\n        </h2>\n        <p className={cn(styles.placeCardType, 'place-card__type')}>{offer.type}</p>\n      </div>\n    </article>\n  );\n}\n\nexport default memo(PlaceCard);\n","import {memo} from 'react';\nimport PlaceCard from '../place-card/place-card';\nimport {Offer} from '../../types/data';\n\ntype CardListProps = {\n  offers: Offer[];\n  cardType: string;\n  onMouseEnterCard?: (id: number) => void;\n  onMouseLeaveCard?: () => void;\n}\n\nfunction CardList({offers, cardType, onMouseEnterCard, onMouseLeaveCard}: CardListProps): JSX.Element {\n  return (\n    <>\n      {offers.map((offer) => (\n        <PlaceCard\n          key={offer.id}\n          offer={offer}\n          cardType={cardType}\n          onMouseEnterCard={onMouseEnterCard}\n          onMouseLeaveCard={onMouseLeaveCard}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default memo(CardList);\n","import {MutableRefObject, useEffect, useState} from 'react';\nimport leaflet from 'leaflet';\nimport {Map} from 'leaflet';\nimport {City} from '../types/data';\n\nconst URL_TEMPLATE = 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png';\nconst ATTRIBUTION = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>';\n\nfunction useMap(\n  mapRef: MutableRefObject<HTMLElement | null>,\n  city: City,\n): Map | null {\n  const [map, setMap] = useState<Map | null>(null);\n\n  useEffect(() => {\n    const {latitude, longitude, zoom} = city.location;\n\n    if (mapRef.current !== null && map === null) {\n      const instance = leaflet.map(mapRef.current, {\n        center: {\n          lat: latitude,\n          lng: longitude,\n        },\n        zoom: zoom,\n      });\n\n      leaflet\n        .tileLayer(\n          URL_TEMPLATE,\n          {\n            attribution: ATTRIBUTION,\n          },\n        )\n        .addTo(instance);\n\n      setMap(instance);\n    }\n  }, [mapRef, map, city]);\n\n  return map;\n}\n\nexport default useMap;\n","import {useEffect, useRef} from 'react';\nimport leaflet, {Marker} from 'leaflet';\nimport cn from 'classnames';\nimport useMap from '../../hooks/use-map';\nimport {City, Offer} from '../../types/data';\nimport 'leaflet/dist/leaflet.css';\nimport styles from './map.module.scss';\n\ntype MapProps = {\n  className: string;\n  offers: Offer[];\n  city: City;\n  activeCardId?: number | null;\n}\n\nconst URL_MARKER_DEFAULT = '/20520-six-cities-8/img/pin.svg';\nconst URL_MARKER_ACTIVE = '/20520-six-cities-8/img/pin-active.svg';\n\nfunction Map({className, offers, city, activeCardId}: MapProps): JSX.Element {\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, city);\n\n  const defaultIcon = leaflet.icon({\n    iconUrl: URL_MARKER_DEFAULT,\n    iconSize: [27, 39],\n    iconAnchor: [13, 39],\n  });\n\n  const activeIcon = leaflet.icon({\n    iconUrl: URL_MARKER_ACTIVE,\n    iconSize: [27, 39],\n    iconAnchor: [13, 39],\n  });\n\n  if (map) {\n    map.setView({\n      lat: city.location.latitude,\n      lng: city.location.longitude,\n    }, city.location.zoom);\n  }\n\n  useEffect(() => {\n    const points: Marker[] = [];\n    if (map) {\n      offers.forEach((offer) => {\n        const {latitude, longitude} = offer.location;\n\n        const point = leaflet.marker({\n          lat: latitude,\n          lng: longitude,\n        }, {\n          icon: activeCardId === offer.id ? activeIcon : defaultIcon,\n        })\n          .addTo(map);\n\n        points.push(point);\n      });\n    }\n\n    return () => points.forEach((point) => point.remove());\n  }, [map, offers, activeCardId]);\n\n  return (\n    <section className={cn('map', styles[className])} ref={mapRef} data-testid='map'/>\n  );\n}\n\nexport default Map;\n\n","import {useCallback, useState} from 'react';\nimport Sorting from '../sorting/sorting';\nimport CardList from '../card-list/card-list';\nimport Map from '../map/map';\nimport {City, Offer} from '../../types/data';\n\ntype CardListAndMapProps = {\n  currentCityOffers: Offer[];\n}\n\nfunction OffersBoard({currentCityOffers}: CardListAndMapProps): JSX.Element {\n  const currentCity: City = currentCityOffers[0].city;\n\n  const [activeCardId, setActiveCardId] = useState<number | null>(null);\n\n  const onMouseEnterCard = useCallback((id: number) => {\n    setActiveCardId(id);\n  }, []);\n  const onMouseLeaveCard = useCallback(() => {\n    setActiveCardId(null);\n  }, []);\n\n  return (\n    <div className='cities__places-container container' data-testid='offers-board'>\n      <section className='cities__places places'>\n        <h2 className='visually-hidden'>Places</h2>\n        <b className='places__found'>{currentCityOffers.length} places to stay in {currentCity.name}</b>\n        <Sorting />\n        <div className='cities__places-list places__list tabs__content'>\n          <CardList\n            offers={currentCityOffers}\n            cardType={'cities'}\n            onMouseEnterCard={onMouseEnterCard}\n            onMouseLeaveCard={onMouseLeaveCard}\n          />\n        </div>\n      </section>\n      <div className='cities__right-section'>\n        <Map className={'cities__map'} offers={currentCityOffers} city={currentCity} activeCardId={activeCardId} />\n      </div>\n    </div>\n  );\n}\n\nexport default OffersBoard;\n","type OffersBoardEmptyProps = {\n  currentCityName: string;\n}\n\nfunction OffersBoardEmpty({currentCityName}: OffersBoardEmptyProps): JSX.Element {\n  return (\n    <div className=\"cities__places-container cities__places-container--empty container\" data-testid='offers-board-empty'>\n      <section className=\"cities__no-places\">\n        <div className=\"cities__status-wrapper tabs__content\">\n          <b className=\"cities__status\">No places to stay available</b>\n          <p className=\"cities__status-description\">We could not find any property available at the moment in {currentCityName}</p>\n        </div>\n      </section>\n      <div className=\"cities__right-section\" />\n    </div>\n  );\n}\n\nexport default OffersBoardEmpty;\n","import {Offer} from './types/data';\nimport {SortingOption} from './const';\n\nconst comparePriceLowFirst = (offerA: Offer, offerB: Offer) => offerA.price - offerB.price;\nconst comparePriceHighFirst = (offerA: Offer, offerB: Offer) => offerB.price - offerA.price;\nconst compareTopRatedFirst = (offerA: Offer, offerB: Offer) => offerB.rating - offerA.rating;\n\nexport const sortOffers = (offers: Offer[], sortingOption: SortingOption): Offer[] => {\n  switch (sortingOption) {\n    case SortingOption.Popular:\n      return offers;\n    case SortingOption.PriceLowFirst:\n      return offers.sort(comparePriceLowFirst);\n    case SortingOption.PriceHighFirst:\n      return offers.sort(comparePriceHighFirst);\n    case SortingOption.TopRatedFirst:\n      return offers.sort(compareTopRatedFirst);\n  }\n};\n","import {createSelector} from '@reduxjs/toolkit';\nimport {State} from '../../types/state';\nimport {Offer} from '../../types/data';\nimport {NameSpace} from '../root-reducer';\nimport {FetchStatus} from '../../const';\nimport {getCurrentCityName, getCurrentSorting} from '../ui/selectors';\nimport {sortOffers} from '../../offers-sorting';\n\nexport const getOffers = (state: State): Offer[] => state[NameSpace.Offers].offers;\nexport const getOffersStatus = (state: State): FetchStatus => state[NameSpace.Offers].offersStatus;\nexport const getOffer = (state: State):  Offer | null => state[NameSpace.Offers].offer;\nexport const getOfferStatus = (state: State): FetchStatus => state[NameSpace.Offers].offerStatus;\nexport const getNearbyOffers = (state: State): Offer[] => state[NameSpace.Offers].nearbyOffers;\n\nexport const selectOffers = createSelector([getOffers, getCurrentCityName, getCurrentSorting], (offers, cityName, sorting) => {\n  const offersByCity = offers.filter((offer: Offer) => offer.city.name === cityName);\n  return sortOffers(offersByCity, sorting);\n});\n","import {useSelector} from 'react-redux';\nimport cn from 'classnames';\nimport Header from '../../components/header/header';\nimport LocationTabs from '../../components/location-tabs/location-tabs';\nimport OffersBoard from '../../components/offers-board/offers-board';\nimport OffersBoardEmpty from '../../components/offers-board-empty/offers-board-empty';\nimport {getCurrentCityName} from '../../store/ui/selectors';\nimport {selectOffers} from '../../store/offers/selectors';\n\nfunction Main(): JSX.Element {\n  const currentCityName = useSelector(getCurrentCityName);\n\n  const offers = useSelector(selectOffers);\n\n  return (\n    <div className='page page--gray page--main'>\n      <Header />\n      <main className={cn('page__main', 'page__main--index', {'page__main--index-empty': offers.length === 0})}>\n        <h1 className='visually-hidden'>Cities</h1>\n        <LocationTabs />\n        <div className='cities'>\n          {\n            offers.length > 0\n              ? <OffersBoard currentCityOffers={offers} />\n              : <OffersBoardEmpty currentCityName={currentCityName} />\n          }\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Main;\n","import BeatLoader from 'react-spinners/BeatLoader';\nimport cn from 'classnames';\nimport styles from './loader.module.scss';\n\ntype LoaderProps = {\n  size: number;\n  isFullScreen?: boolean;\n  isLoginScreen?: boolean;\n  isFavoritesScreen?: boolean;\n  isReviewForm?: boolean;\n};\n\nfunction Loader({size, isFullScreen, isLoginScreen, isReviewForm, isFavoritesScreen}: LoaderProps): JSX.Element {\n  return (\n    <div\n      className={cn(\n        'loader-wrapper',\n        {[styles.loaderWrapperFullScreen]: isFullScreen},\n        {[styles.loaderWrapperFavoritesScreen]: isFavoritesScreen},\n        {[styles.loaderWrapperLogin]: isLoginScreen},\n        {[styles.loaderWrapperReview]: isReviewForm},\n      )}\n      data-testid='loader'\n    >\n      <BeatLoader color={'#66a5e8'} size={size}/>\n    </div>\n  );\n}\n\nexport default Loader;\n","import {ChangeEvent, FormEvent, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\nimport Loader from '../loader/loader';\nimport {FetchStatus} from '../../const';\nimport {loginAction} from '../../store/api-actions';\nimport {getAuthorizationRequestStatus} from '../../store/user/selectors';\nimport styles from './login-form.module.scss';\n\nconst fields = {\n  email: 'E-mail',\n  password: 'Password',\n};\n\ntype Field = {\n  value: string;\n  error: boolean;\n  touched: boolean;\n  errorText: string;\n  regex: RegExp,\n}\n\ntype FormValues = {\n  [key: string]: Field;\n}\n\nfunction LoginForm (): JSX.Element {\n  const dispatch = useDispatch();\n  const authorizationRequestStatus = useSelector(getAuthorizationRequestStatus);\n\n  const [formState, setFormState] = useState<FormValues>({\n    email: {\n      value: '',\n      error: false,\n      touched: false,\n      errorText: 'Please, enter a valid E-mail address',\n      regex: /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\n    },\n    password: {\n      value: '',\n      error: false,\n      touched: false,\n      errorText: 'Minimum 1 uppercase, 1 lowercase letter and 1 number',\n      regex: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{3,}$/,\n    },\n  });\n\n  const handleFormChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    const {name, value} = target;\n    const rule = formState[name].regex;\n    const isValid = rule.test(value);\n\n    setFormState({\n      ...formState,\n      [name]: {\n        ...formState[name],\n        error: !isValid,\n        value,\n        touched: true,\n      },\n    });\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    dispatch(loginAction({\n      email: formState.email.value,\n      password: formState.password.value,\n    }));\n  };\n\n  return (\n    <section className='login' data-testid='login-form'>\n      <h1 className='login__title'>Sign in</h1>\n      <form className='login__form form' action='#' method='post' onSubmit={handleSubmit}>\n        {Object.entries(fields).map(([name, label]) => {\n          const inputCls = cn('login__input', 'form__input',  {[styles.loginInputError]: formState[name].error && formState[name].touched});\n\n          return (\n            <div key={name} className={cn(styles.loginInputWrapper, 'login__input-wrapper', 'form__input-wrapper')}>\n              <label className='visually-hidden' htmlFor={name}>{label}</label>\n\n              <input\n                className={inputCls}\n                id={name}\n                type={name}\n                name={name}\n                placeholder={label}\n                value={formState[name].value}\n                onChange={handleFormChange}\n              />\n\n              {formState[name].error && formState[name].touched && (\n                <p className={styles.loginInputErrorMessage}>{formState[name].errorText}</p>\n              )}\n            </div>\n          );\n        })}\n        <button\n          className='login__submit form__submit button'\n          type='submit'\n          disabled={\n            formState.email.error\n            || formState.password.error\n            || !formState.email.touched\n            || !formState.password.touched\n          }\n        >\n          {authorizationRequestStatus === FetchStatus.Loading ? <Loader size={10} isLoginScreen /> : 'Sign in'}\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default LoginForm;\n","import {Link} from 'react-router-dom';\nimport {getRandomPositiveInteger} from '../../utils';\nimport {CITIES_LIST} from '../../const';\nimport {useDispatch} from 'react-redux';\nimport {selectCity} from '../../store/action';\n\nfunction RandomLocation(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const randomCity = CITIES_LIST[getRandomPositiveInteger(0, CITIES_LIST.length-1)];\n\n  const onClickCityTab = () => {\n    dispatch(selectCity(randomCity));\n  };\n\n  return (\n    <section className='locations locations--login locations--current' data-testid='random-location'>\n      <div className='locations__item'>\n        <Link className='locations__item-link' to={'/'} onClick={onClickCityTab}>\n          <span>{randomCity}</span>\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default RandomLocation;\n","import Logo from '../../components/logo/logo';\nimport LoginForm from '../../components/login-form/login-form';\nimport RandomLocation from '../../components/random-location/random-location';\n\nfunction Login(): JSX.Element {\n  return (\n    <div className='page page--gray page--login'>\n      <header className='header'>\n        <div className='container'>\n          <div className='header__wrapper'>\n            <div className='header__left'>\n              <Logo />\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className='page__main page__main--login'>\n        <div className='page__login-container container'>\n          <LoginForm />\n          <RandomLocation />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Login;\n","import RandomLocation from '../../components/random-location/random-location';\nimport Header from '../../components/header/header';\n\nfunction NotFound(): JSX.Element {\n  return (\n    <div className='page page--gray page--login' data-testid='not-found-page'>\n      <Header />\n\n      <main className='page__main page__main--login'>\n        <div className='page__login-container container'>\n          <section className='login'>\n            <h1 className='login__title'>404<br/> This page doesn&apos;t exist.</h1>\n          </section>\n          <RandomLocation />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default NotFound;\n","function UserProLabel(): JSX.Element {\n  return (\n    <span className='property__user-status' data-testid='user-pro-label'>\n      Pro\n    </span>\n  );\n}\n\nexport default UserProLabel;\n","import cn from 'classnames';\nimport UserProLabel from '../user-pro-label/user-pro-label';\nimport {User} from '../../types/data';\n\ntype HostUserProps = {\n  user: User;\n}\n\nfunction HostUser({user}: HostUserProps): JSX.Element {\n  return (\n    <div className='property__host-user user'>\n      <div className={cn('property__avatar-wrapper', 'user__avatar-wrapper', {'property__avatar-wrapper--pro': user.isPro})}>\n        <img\n          className='property__avatar user__avatar'\n          src={user.avatarUrl}\n          width='74'\n          height='74'\n          alt='Host avatar'\n        />\n      </div>\n      <span className='property__user-name'>\n        {user.name}\n      </span>\n      {user.isPro && <UserProLabel />}\n    </div>\n  );\n}\n\nexport default HostUser;\n","import {ChangeEvent} from 'react';\n\ntype ReviewStarProps = {\n  value: string;\n  currentValue: string;\n  id: string;\n  onReviewChange: (evt: ChangeEvent<HTMLInputElement>) => void;\n  disabled: boolean;\n}\n\nfunction ReviewStar({value, currentValue, id, onReviewChange, disabled}: ReviewStarProps): JSX.Element {\n  return (\n    <>\n      <input\n        className='form__rating-input visually-hidden'\n        name='rating'\n        value={value}\n        id={id}\n        type='radio'\n        onChange={onReviewChange}\n        disabled={disabled}\n        checked={value === currentValue}\n        data-testid={`review-star-${id}`}\n      />\n      <label htmlFor={id} className='reviews__rating-label form__rating-label' title='perfect'>\n        <svg className='form__star-image' width='37' height='33'>\n          <use xlinkHref='#icon-star'/>\n        </svg>\n      </label>\n    </>\n  );\n}\n\nexport default ReviewStar;\n","import {State} from '../../types/state';\nimport {Review} from '../../types/data';\nimport {NameSpace} from '../root-reducer';\nimport {FetchStatus, MAXIMUM_COMMENTS_COUNT} from '../../const';\nimport {createSelector} from '@reduxjs/toolkit';\n\nexport const getReviews = (state: State): Review[] => state[NameSpace.Reviews].reviews;\nexport const getReviewPostStatus = (state: State): FetchStatus => state[NameSpace.Reviews].reviewPostStatus;\n\nexport const selectReviews = createSelector([getReviews], (reviews) => {\n  const compareReviewDate = (reviewA: Review, reviewB: Review) => new Date(reviewB.date).getTime() - new Date(reviewA.date).getTime();\n  return reviews.slice().sort(compareReviewDate).slice(0, MAXIMUM_COMMENTS_COUNT);\n});\n","import {ChangeEvent, FormEvent, useEffect, useState} from 'react';\nimport ReviewStar from '../review-star/review-star';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {postReviewAction} from '../../store/api-actions';\nimport {FetchStatus} from '../../const';\nimport Loader from '../loader/loader';\nimport {resetPostReview} from '../../store/action';\nimport {getReviewPostStatus} from '../../store/reviews/selectors';\n\nconst MIN_REVIEW_LENGTH = 50;\nconst MAX_REVIEW_LENGTH = 300;\nconst STARS_IDENTIFIERS = ['5-stars', '4-stars', '3-stars', '2-stars', '1-star'];\n\ntype ReviewFormProps = {\n  pageId: string;\n};\n\nconst initialState = {\n  rating: '0',\n  review: '',\n};\n\nfunction ReviewForm({pageId}: ReviewFormProps): JSX.Element {\n  const dispatch = useDispatch();\n  const reviewPostStatus = useSelector(getReviewPostStatus);\n\n  const [review, setReview] = useState(initialState);\n\n  useEffect(() => {\n    if (reviewPostStatus === FetchStatus.Success) {\n      setReview(initialState);\n      dispatch(resetPostReview());\n    }\n  }, [reviewPostStatus]);\n\n  const handleReviewChange = (evt: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const target = evt.target;\n    const name = target.name;\n    const value = target.value;\n    setReview({...review, [name]: value});\n  };\n\n  const handleSubmitForm = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    dispatch(postReviewAction(pageId, {\n      comment: review.review,\n      rating: review.rating,\n    }));\n  };\n\n  const isValidReview = (review.rating !== '0') && (review.review.length >= MIN_REVIEW_LENGTH) && (review.review.length <= MAX_REVIEW_LENGTH);\n  const isLoading = reviewPostStatus === FetchStatus.Loading;\n\n  return (\n    <form className='reviews__form form' action='#' method='post' onSubmit={handleSubmitForm} data-testid='review-form'>\n\n      <label className='reviews__label form__label' htmlFor='review'>Your review</label>\n      <div className='reviews__rating-form form__rating'>\n        {STARS_IDENTIFIERS.map((id) => (\n          <ReviewStar\n            key={id}\n            value={id.split('-')[0]}\n            currentValue={review.rating}\n            id={id}\n            onReviewChange={handleReviewChange}\n            disabled={isLoading}\n          />))}\n      </div>\n      <textarea\n        className='reviews__textarea form__textarea'\n        id='review' name='review'\n        placeholder='Tell how was your stay, what you like and what can be improved'\n        value={review.review}\n        onChange={handleReviewChange}\n        disabled={isLoading}\n      />\n      <div className='reviews__button-wrapper'>\n        <p className='reviews__help'>\n          To submit review please make sure to set <span className='reviews__star'>rating</span> and\n          describe your stay with at least <b className='reviews__text-amount'>50 characters</b>.\n        </p>\n        <button className='reviews__submit form__submit button' type='submit' disabled={!isValidReview || isLoading}>\n          {isLoading ? <Loader size={8} isReviewForm /> : 'Submit'}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ReviewForm;\n","import dayjs from 'dayjs';\nimport {Review} from '../../types/data';\nimport {calculateRatingStars} from '../../utils';\n\ntype ReviewProps = {\n  review: Review;\n}\n\nfunction ReviewItem({review}: ReviewProps): JSX.Element {\n  return (\n    <li className='reviews__item' data-testid='review-item'>\n      <div className='reviews__user user'>\n        <div className='reviews__avatar-wrapper user__avatar-wrapper'>\n          <img className='reviews__avatar user__avatar' src={review.user.avatarUrl} width='54' height='54'\n            alt='Reviews avatar'\n          />\n        </div>\n        <span className='reviews__user-name'>\n          {review.user.name}\n        </span>\n      </div>\n      <div className='reviews__info'>\n        <div className='reviews__rating rating'>\n          <div className='reviews__stars rating__stars'>\n            <span style={{width: calculateRatingStars(review.rating)}}/>\n            <span className='visually-hidden'>Rating</span>\n          </div>\n        </div>\n        <p className='reviews__text'>\n          {review.comment}\n        </p>\n        <time className='reviews__time' dateTime={dayjs(review.date).format('YYYY-MM-DD')}>{dayjs(review.date).format('MMMM YYYY')}</time>\n      </div>\n    </li>\n  );\n}\n\nexport default ReviewItem;\n","import ReviewItem from '../review-item/review-item';\nimport {Review} from '../../types/data';\n\ntype ReviewListProps = {\n  reviews: Review[];\n}\n\nfunction ReviewList({reviews}: ReviewListProps): JSX.Element {\n  return (\n    <ul className='reviews__list' data-testid='review-list'>\n      {reviews.map((review) => <ReviewItem key={review.id} review={review} />)}\n    </ul>\n  );\n}\n\nexport default ReviewList;\n","import {useSelector} from 'react-redux';\nimport ReviewForm from '../review-form/review-form';\nimport ReviewList from '../review-list/review-list';\nimport {AuthorizationStatus, MAXIMUM_COMMENTS_COUNT} from '../../const';\nimport {selectReviews} from '../../store/reviews/selectors';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\ntype PropertyReviewsProps = {\n  pageId: string;\n}\n\nfunction PropertyReviews({pageId}: PropertyReviewsProps): JSX.Element {\n  const reviews = useSelector(selectReviews);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <section className='property__reviews reviews' data-testid='property-reviews'>\n      <h2 className='reviews__title'>Reviews &middot; <span className='reviews__amount'>{reviews.length < 10 ? reviews.length : MAXIMUM_COMMENTS_COUNT}</span></h2>\n      <ReviewList reviews={reviews} />\n      {authorizationStatus === AuthorizationStatus.Auth && <ReviewForm pageId={pageId} />}\n    </section>\n  );\n}\n\nexport default PropertyReviews;\n","function LoadError(): JSX.Element {\n  return (\n    <div className='page page--gray page--login' data-testid='load-error-page'>\n      <header className='header'>\n        <div className='container'>\n          <div className='header__wrapper'>\n            <div className='header__left'>\n              <a className='header__logo-link header__logo-link--active' href='/'>\n                <img className='header__logo' src='/20520-six-cities-8/img/logo.svg' alt='6 cities logo' width='81' height='41'/>\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className='page__main page__main--login'>\n        <div className='page__login-container container'>\n          <section className='login'>\n            <h1 className='login__title'>An unexpected error occurred while loading data.<br/> Please try again later.</h1>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default LoadError;\n","import {useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\nimport Header from '../../components/header/header';\nimport CardList from '../../components/card-list/card-list';\nimport NotFound from '../not-found/not-found';\nimport HostUser from '../../components/host-user/host-user';\nimport PropertyReviews from '../../components/property-reviews/property-reviews';\nimport PremiumLabel from '../../components/premium-label/premium-label';\nimport Loader from '../../components/loader/loader';\nimport Map from '../../components/map/map';\nimport LoadError from '../load-error/load-error';\nimport BookmarkButton from '../../components/bookmark-button/bookmark-button';\nimport {calculateRatingStars} from '../../utils';\nimport {fetchNearbyOffersAction, fetchOfferAction, fetchReviewsAction} from '../../store/api-actions';\nimport {getNearbyOffers, getOffer, getOfferStatus} from '../../store/offers/selectors';\nimport {dropRoomOffersData, dropRoomReviewsData} from '../../store/action';\nimport {FetchStatus} from '../../const';\nimport styles from './room.module.scss';\n\nconst MAX_PHOTOS_COUNT = 6;\n\ntype TypeName = {\n  [type: string]: string,\n}\n\nconst FullTypeName: TypeName = {\n  apartment: 'Apartment',\n  room: 'Private Room',\n  house: 'House',\n  hotel: 'Hotel',\n};\n\ntype PageParams = {\n  id: string;\n}\n\nfunction Room(): JSX.Element {\n  const dispatch = useDispatch();\n  const offer = useSelector(getOffer);\n  const nearbyOffers = useSelector(getNearbyOffers).slice(0, 3);\n  const offerStatus = useSelector(getOfferStatus);\n\n  const {id: pageId} = useParams<PageParams>();\n\n  useEffect(() => {\n    dispatch(fetchOfferAction(pageId));\n    dispatch(fetchNearbyOffersAction(pageId));\n    dispatch(fetchReviewsAction(pageId));\n    return () => {\n      dispatch(dropRoomOffersData());\n      dispatch(dropRoomReviewsData());\n    };\n  }, [pageId]);\n\n  if (offerStatus === FetchStatus.Idle || offerStatus === FetchStatus.Loading){\n    return <Loader size={15} isFullScreen />;\n  }\n\n  if (offerStatus === FetchStatus.Failed) {\n    return <LoadError />;\n  }\n\n  if (!offer) {\n    return <NotFound />;\n  }\n\n  const {id, bedrooms, description, goods, host, images, isFavorite, isPremium, maxAdults, price, rating, title, type, city} = offer;\n\n  return (\n    <div className='page' data-testid='room-page'>\n      <Header />\n\n      <main className='page__main page__main--property'>\n        <section className='property'>\n          <div className='property__gallery-container container'>\n            <div className='property__gallery'>\n              {images.slice(0, MAX_PHOTOS_COUNT).map((image) => (\n                <div key={image} className='property__image-wrapper'>\n                  <img className='property__image' src={image} alt={title}/>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className='property__container container'>\n            <div className='property__wrapper'>\n              {isPremium && <PremiumLabel className={'property__mark'} />}\n              <div className='property__name-wrapper'>\n                <h1 className='property__name'>\n                  {title}\n                </h1>\n                <BookmarkButton buttonType={'property'} isFavorite={isFavorite} id={id} key={id} />\n              </div>\n              <div className='property__rating rating'>\n                <div className='property__stars rating__stars'>\n                  <span style={{width: calculateRatingStars(rating)}}/>\n                  <span className='visually-hidden'>Rating</span>\n                </div>\n                <span className='property__rating-value rating__value'>{rating}</span>\n              </div>\n              <ul className='property__features'>\n                <li className={cn('property__feature', styles.propertyFeatureEntire)}>\n                  {FullTypeName[type]}\n                </li>\n                <li className='property__feature property__feature--bedrooms'>\n                  {bedrooms} {bedrooms > 1 ? 'Bedrooms' : 'Bedroom'}\n                </li>\n                <li className='property__feature property__feature--adults'>\n                  Max {maxAdults} {maxAdults > 1 ? 'adults' : 'adult'}\n                </li>\n              </ul>\n              <div className='property__price'>\n                <b className='property__price-value'>&euro;{price}</b>\n                <span className='property__price-text'>&nbsp;night</span>\n              </div>\n              <div className='property__inside'>\n                <h2 className='property__inside-title'>What&apos;s inside</h2>\n                <ul className='property__inside-list'>\n                  {goods.map((item) => (\n                    <li key={item} className='property__inside-item'>\n                      {item}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className='property__host'>\n                <h2 className='property__host-title'>Meet the host</h2>\n                <HostUser user={host} />\n                <div className='property__description'>\n                  <p className='property__text'>\n                    {description}\n                  </p>\n                </div>\n              </div>\n              <PropertyReviews pageId={pageId} />\n            </div>\n          </div>\n          <Map className={'property__map'} offers={[...nearbyOffers, offer]} city={city} activeCardId={parseInt(pageId, 10)} />\n        </section>\n        <div className='container'>\n          <section className='near-places places'>\n            <h2 className='near-places__title'>Other places in the neighbourhood</h2>\n            <div className='near-places__list places__list'>\n              <CardList offers={nearbyOffers} cardType={'near-places'} />\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Room;\n","import CardList from '../card-list/card-list';\nimport {Offer} from '../../types/data';\n\ntype FavoritesLocationsByCityProps = {\n  city: string;\n  cityOffers: Offer[];\n}\n\nfunction FavoritesLocationsByCity({city, cityOffers}: FavoritesLocationsByCityProps): JSX.Element {\n  return (\n    <li className='favorites__locations-items'>\n      <div className='favorites__locations locations locations--current'>\n        <div className='locations__item'>\n          <a className='locations__item-link' href='/#'>\n            <span>{city}</span>\n          </a>\n        </div>\n      </div>\n      <div className='favorites__places'>\n        <CardList offers={cityOffers} cardType={'favorites'} />\n      </div>\n    </li>\n  );\n}\n\nexport default FavoritesLocationsByCity;\n","function FavoritesEmpty(): JSX.Element {\n  return (\n    <section className=\"favorites favorites--empty\" data-testid='favorites-empty'>\n      <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n      <div className=\"favorites__status-wrapper\">\n        <b className=\"favorites__status\">Nothing yet saved.</b>\n        <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future\n          trips.\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default FavoritesEmpty;\n","import {FetchStatus} from '../../const';\nimport {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {Offer} from '../../types/data';\n\nexport const getFavoriteOptionStatus = (state: State): FetchStatus => state[NameSpace.Favorites].favoriteOptionStatus;\nexport const getFavoriteOffersStatus = (state: State): FetchStatus => state[NameSpace.Favorites].favoriteOffersStatus;\nexport const getFavoriteOffers = (state: State): Offer[] | [] => state[NameSpace.Favorites].favoriteOffers;\n\n","import {useSelector} from 'react-redux';\nimport FavoritesLocationsByCity from '../favorites-locations-by-city/favorites-locations-by-city';\nimport FavoritesEmpty from '../favorites-empty/favorites-empty';\nimport {getFavoriteOffers} from '../../store/favorites/selectors';\nimport {spliceOffersByCity} from '../../utils';\n\nfunction FavoritesList(): JSX.Element {\n  const favoriteOffers = useSelector(getFavoriteOffers);\n\n  if (favoriteOffers.length === 0) {\n    return <FavoritesEmpty />;\n  }\n\n  return (\n    <section className='favorites' data-testid='favorites-list'>\n      <h1 className='favorites__title'>Saved listing</h1>\n      <ul className='favorites__list'>\n        <div>\n          {\n            Object.entries(spliceOffersByCity(favoriteOffers)).map(([city, cityOffers]) =>\n              <FavoritesLocationsByCity key={city} city={city} cityOffers={cityOffers} />)\n          }\n        </div>\n      </ul>\n    </section>\n  );\n}\n\nexport default FavoritesList;\n","import {Link} from 'react-router-dom';\nimport cn from 'classnames';\nimport Header from '../../components/header/header';\nimport FavoritesList from '../../components/favorites-list/favorites-list';\nimport LoadError from '../load-error/load-error';\nimport Loader from '../../components/loader/loader';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getFavoriteOffersStatus, getFavoriteOffers} from '../../store/favorites/selectors';\nimport {useEffect} from 'react';\nimport {fetchFavoriteOffersAction} from '../../store/api-actions';\nimport {dropFavoriteOffers} from '../../store/action';\nimport {FetchStatus} from '../../const';\n\nfunction Favorites(): JSX.Element {\n  const dispatch = useDispatch();\n  const favoriteOffersStatus = useSelector(getFavoriteOffersStatus);\n  const favoritesOffers = useSelector(getFavoriteOffers);\n\n  useEffect(() => {\n    dispatch(fetchFavoriteOffersAction());\n    return () => {\n      dispatch(dropFavoriteOffers());\n    };\n  }, []);\n\n  if (favoriteOffersStatus === FetchStatus.Failed) {\n    return <LoadError />;\n  }\n\n  return (\n    <div className={cn('page', {'page--favorites-empty': favoritesOffers.length === 0})}>\n      <Header />\n      <main className={cn('page__main', 'page__main--favorites', {'page__main--favorites-empty': favoritesOffers.length === 0})}>\n        <div className='page__favorites-container container'>\n          {\n            (favoriteOffersStatus === FetchStatus.Idle || favoriteOffersStatus === FetchStatus.Loading)\n              ? <Loader size={15} isFavoritesScreen />\n              : <FavoritesList />\n          }\n        </div>\n      </main>\n      <footer className='footer container'>\n        <Link className='footer__logo-link' to={'/'}>\n          <img className='footer__logo' src={'/20520-six-cities-8/img/logo.svg'} alt='6 cities logo' width='64' height='33'/>\n        </Link>\n      </footer>\n    </div>\n  );\n}\n\nexport default Favorites;\n","import {Redirect, Route, RouteProps} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport Loader from '../loader/loader';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n  authorizationStatus: AuthorizationStatus;\n  verifiableStatus: AuthorizationStatus;\n  redirectTo: AppRoute;\n}\n\nfunction PrivateRoute({exact, path, render, authorizationStatus, verifiableStatus, redirectTo}: PrivateRouteProps): JSX.Element {\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => {\n        if (authorizationStatus === AuthorizationStatus.Unknown) {\n          return <Loader size={15} isFullScreen />;\n        } else if (authorizationStatus === verifiableStatus) {\n          return render();\n        } else {\n          return <Redirect to={redirectTo} />;\n        }\n      }}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {Route, Switch} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport Main from '../../pages/main/main';\nimport Login from '../../pages/login/login';\nimport Room from '../../pages/room/room';\nimport NotFound from '../../pages/not-found/not-found';\nimport Favorites from '../../pages/favorites/favorites';\nimport PrivateRoute from '../private-route/private-route';\nimport Loader from '../loader/loader';\nimport LoadError from '../../pages/load-error/load-error';\nimport {AppRoute, AuthorizationStatus, FetchStatus} from '../../const';\nimport {getOffersStatus} from '../../store/offers/selectors';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction App(): JSX.Element {\n  const offersStatus = useSelector(getOffersStatus);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  if (offersStatus === FetchStatus.Loading) {\n    return <Loader size={15} isFullScreen/>;\n  }\n\n  if (offersStatus === FetchStatus.Failed) {\n    return <LoadError />;\n  }\n\n  return (\n    <Switch>\n      <Route exact path={AppRoute.Root}>\n        <Main />\n      </Route>\n      <PrivateRoute\n        exact\n        path={AppRoute.Favorites}\n        render={() => <Favorites />}\n        authorizationStatus={authorizationStatus}\n        verifiableStatus={AuthorizationStatus.Auth}\n        redirectTo={AppRoute.Login}\n      />\n      <PrivateRoute\n        exact\n        path={AppRoute.Login}\n        render={() => <Login />}\n        authorizationStatus={authorizationStatus}\n        verifiableStatus={AuthorizationStatus.NoAuth}\n        redirectTo={AppRoute.Root}\n      />\n      <Route exact path={AppRoute.Room}>\n        <Room />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import axios, {AxiosInstance, AxiosResponse, AxiosError, AxiosRequestConfig} from 'axios';\nimport {getToken} from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nenum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(response?.status);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {Provider} from 'react-redux';\nimport {ToastContainer} from 'react-toastify';\nimport App from './components/app/app';\nimport {ThunkAppDispatch} from './types/action';\nimport {checkAuthSuccess} from './store/action';\nimport {checkAuthAction, fetchOffersAction} from './store/api-actions';\nimport {createAPI} from './services/api';\nimport {AuthorizationStatus} from './const';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {rootReducer} from './store/root-reducer';\nimport {HashRouter} from 'react-router-dom';\n\nconst api = createAPI(\n  () => store.dispatch(checkAuthSuccess(AuthorizationStatus.NoAuth)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }),\n});\n\n(store.dispatch as ThunkAppDispatch)(checkAuthAction());\n(store.dispatch as ThunkAppDispatch)(fetchOffersAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <ToastContainer />\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}